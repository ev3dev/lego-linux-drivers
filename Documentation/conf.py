#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# ev3dev-jessie Linux kernel drivers documentation build configuration file, created by
# sphinx-quickstart on Wed Feb  8 23:48:12 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('sphinx'))

# on_rtd is whether we are on readthedocs.org, this line of code grabbed from docs.readthedocs.org
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['kerneldoc', 'rstFlatTable', 'kernel_include', 'cdomain',
              'ev3dev_json', 'sphinx.ext.mathjax']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'ev3dev-jessie Linux kernel drivers'
copyright = '2014-2017, ev3dev.org'
author = 'David Lechner'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '19'
# The full version, including alpha/beta/rc tags.
release = '19'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- kernel-doc -----------------------------------------------------------

kerneldoc_bin = 'sphinx/kernel-doc'
kerneldoc_srctree = '..'


# -- Options for HTML output ----------------------------------------------

if on_rtd:
    html_theme = 'default'
    html_context = {
        'css_files': [
            'https://media.readthedocs.org/css/sphinx_rtd_theme.css',
            'https://media.readthedocs.org/css/readthedocs-doc-embed.css',
            '_static/css/theme_overrides.css',
        ],
    }
else:
    import sphinx_rtd_theme
    html_theme = 'sphinx_rtd_theme'
    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
    html_context = {
        'css_files': [
            '_static/css/theme_overrides.css',
        ],
    }

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['sphinx-static']

html_logo = '_images/ev3devLogo128.png'


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ev3dev-jessieLinuxkerneldriversdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'ev3dev-jessieLinuxkerneldrivers.tex', 'ev3dev-jessie Linux kernel drivers Documentation',
     'David Lechner', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'ev3dev-jessielinuxkerneldrivers', 'ev3dev-jessie Linux kernel drivers Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'ev3dev-jessieLinuxkerneldrivers', 'ev3dev-jessie Linux kernel drivers Documentation',
     author, 'ev3dev-jessieLinuxkerneldrivers', 'One line description of project.',
     'Miscellaneous'),
]

# Options for ev3dev_json extension

ev3dev_json_port_src_files = [
    '../brickpi/brickpi_ports_in.c',
    '../brickpi/brickpi_ports_out.c',
    '../brickpi3/brickpi3_ports_in.c',
    '../brickpi3/brickpi3_ports_out.c',
    '../ev3/legoev3_ports_in.c',
    '../ev3/legoev3_ports_out.c',
    '../evb/evb_ports_in.c',
    '../evb/evb_ports_out.c',
    '../pistorms/pistorms_ports_in.c',
    '../pistorms/pistorms_ports_out.c',
    '../sensors/ht_nxt_smux.c',
    '../sensors/ms_ev3_smux.c',
    '../sensors/ms_nxtmmx.c',
    '../wedo/wedo_port.c',
]

ev3dev_json_sensor_h_files = [
    '../sensors/ev3_analog_sensor.h',
    '../sensors/ev3_uart_sensor.h',
    '../sensors/nxt_analog_sensor.h',
    '../sensors/nxt_i2c_sensor.h',
]

ev3dev_json_sensor_src_files = [
    '../sensors/ev3_analog_sensor_defs.c',
    '../sensors/ev3_uart_sensor_defs.c',
    '../sensors/nxt_analog_sensor_defs.c',
    '../sensors/nxt_i2c_sensor_defs.c',
    '../sensors/other_sensor_defs.c',
    '../wedo/wedo_hub.c',
    '../wedo/wedo_sensor.c',
]

ev3dev_json_motor_h_files = [
    '../motors/ev3_motor.h',
]

ev3dev_json_motor_src_files = [
    '../motors/ev3_motor_defs.c',
    '../motors/rcx_motor_defs.c',
]
